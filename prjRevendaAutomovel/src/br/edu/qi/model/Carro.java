package br.edu.qi.model;
// Generated Nov 15, 2017 12:39:38 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Carro generated by hbm2java
 */
@Entity
@Table(name="carro"
    ,catalog="dbrevenda"
)
public class Carro  implements java.io.Serializable {


     private Integer idCarro;
     private Modelo modelo;
     private String cor;
     private String descricao;
     private Boolean estado;
     private Long km;
     private Set<CarroAcessorio> carroAcessorios = new HashSet<CarroAcessorio>(0);
     private Set<Venda> vendas = new HashSet<Venda>(0);

    public Carro() {
    }

    public Carro(Modelo modelo, String cor, String descricao, Boolean estado, Long km, Set<CarroAcessorio> carroAcessorios, Set<Venda> vendas) {
       this.modelo = modelo;
       this.cor = cor;
       this.descricao = descricao;
       this.estado = estado;
       this.km = km;
       this.carroAcessorios = carroAcessorios;
       this.vendas = vendas;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_carro", unique=true, nullable=false)
    public Integer getIdCarro() {
        return this.idCarro;
    }
    
    public void setIdCarro(Integer idCarro) {
        this.idCarro = idCarro;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_modelo")
    public Modelo getModelo() {
        return this.modelo;
    }
    
    public void setModelo(Modelo modelo) {
        this.modelo = modelo;
    }

    
    @Column(name="cor", length=50)
    public String getCor() {
        return this.cor;
    }
    
    public void setCor(String cor) {
        this.cor = cor;
    }

    
    @Column(name="descricao", length=65535)
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    
    @Column(name="estado")
    public Boolean getEstado() {
        return this.estado;
    }
    
    public void setEstado(Boolean estado) {
        this.estado = estado;
    }

    
    @Column(name="km", precision=10, scale=0)
    public Long getKm() {
        return this.km;
    }
    
    public void setKm(Long km) {
        this.km = km;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="carro")
    public Set<CarroAcessorio> getCarroAcessorios() {
        return this.carroAcessorios;
    }
    
    public void setCarroAcessorios(Set<CarroAcessorio> carroAcessorios) {
        this.carroAcessorios = carroAcessorios;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="carro")
    public Set<Venda> getVendas() {
        return this.vendas;
    }
    
    public void setVendas(Set<Venda> vendas) {
        this.vendas = vendas;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 83 * hash + Objects.hashCode(this.modelo);
        hash = 83 * hash + Objects.hashCode(this.cor);
        hash = 83 * hash + Objects.hashCode(this.descricao);
        hash = 83 * hash + Objects.hashCode(this.estado);
        hash = 83 * hash + Objects.hashCode(this.km);
        hash = 83 * hash + Objects.hashCode(this.carroAcessorios);
        hash = 83 * hash + Objects.hashCode(this.vendas);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Carro other = (Carro) obj;
        if (!Objects.equals(this.cor, other.cor)) {
            return false;
        }
        if (!Objects.equals(this.descricao, other.descricao)) {
            return false;
        }
        if (!Objects.equals(this.modelo, other.modelo)) {
            return false;
        }
        if (!Objects.equals(this.estado, other.estado)) {
            return false;
        }
        if (!Objects.equals(this.km, other.km)) {
            return false;
        }
        if (!Objects.equals(this.carroAcessorios, other.carroAcessorios)) {
            return false;
        }
        if (!Objects.equals(this.vendas, other.vendas)) {
            return false;
        }
        return true;
    }




}


